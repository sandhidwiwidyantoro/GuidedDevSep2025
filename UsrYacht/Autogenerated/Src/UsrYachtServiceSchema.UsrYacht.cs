namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: UsrYachtServiceSchema

	/// <exclude/>
	public class UsrYachtServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UsrYachtServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UsrYachtServiceSchema(UsrYachtServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("a465a679-a625-4d87-97a0-6d0ef0c1582c");
			Name = "UsrYachtService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b8e201a8-1239-4596-b652-c3399610ca30");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,84,77,79,219,64,16,61,131,196,127,216,250,100,75,137,33,17,130,182,148,74,73,9,81,90,133,32,12,66,85,213,195,196,59,14,86,215,107,179,31,1,11,241,223,187,107,47,36,14,161,180,55,212,118,47,241,206,190,249,122,51,47,28,50,148,5,196,72,206,81,8,144,121,162,194,79,57,79,210,153,22,160,210,156,111,109,222,109,109,18,115,180,76,249,140,68,165,84,152,133,17,138,121,26,227,56,167,200,14,94,120,15,47,113,250,34,166,23,171,116,94,37,108,64,151,139,18,24,30,245,159,121,53,41,12,34,203,86,220,235,76,235,146,91,135,8,165,52,9,35,5,10,29,230,155,43,202,80,160,4,196,234,187,51,247,100,113,130,202,100,40,76,141,211,148,165,170,60,195,107,157,10,204,144,43,233,47,95,108,67,228,144,188,224,98,81,161,51,208,192,229,41,244,148,165,49,137,25,72,73,190,66,124,165,92,61,228,61,233,131,68,119,107,145,209,25,2,157,112,86,46,247,80,199,112,227,170,202,158,20,88,79,113,165,159,234,209,80,48,226,243,252,7,250,99,84,87,57,53,53,123,167,147,232,220,107,145,126,78,203,72,149,204,246,97,96,99,147,4,102,248,104,13,47,5,20,5,210,214,34,154,61,182,27,148,234,56,23,25,168,134,103,109,10,63,203,156,183,12,76,22,57,151,248,107,156,165,100,17,222,17,67,49,78,51,96,100,136,106,12,183,167,194,112,209,47,143,68,58,199,243,178,192,17,245,165,18,118,200,116,97,10,22,65,238,154,229,166,9,113,248,112,36,79,52,99,19,49,200,10,85,250,203,222,65,211,103,37,132,61,2,149,22,156,180,59,7,205,183,251,230,53,66,134,177,34,178,254,57,36,28,111,156,205,191,144,40,204,128,184,249,54,163,10,158,166,48,171,205,116,198,253,99,205,227,208,52,238,123,23,82,84,221,123,171,5,86,240,99,145,103,21,166,90,33,111,29,228,242,10,5,86,152,37,250,188,192,48,49,184,214,192,252,58,99,120,10,194,252,65,40,20,190,173,119,168,83,218,100,103,93,232,30,167,85,96,187,147,90,254,102,84,111,127,7,119,166,128,73,251,221,254,206,94,123,183,251,150,182,161,219,237,182,247,32,233,236,209,36,129,221,253,142,233,54,32,219,219,164,19,146,199,205,6,246,180,4,144,142,218,149,145,60,172,143,64,169,153,29,66,61,141,112,112,139,177,86,24,197,192,64,124,112,168,143,126,176,226,238,38,93,123,47,189,221,219,77,221,216,248,155,213,214,155,207,254,77,181,153,198,255,171,237,245,169,237,225,242,231,154,27,14,94,145,228,30,2,59,193,57,61,25,189,13,110,33,43,24,250,207,235,201,209,227,77,190,188,241,214,177,99,62,238,127,2,142,202,95,184,221,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("a465a679-a625-4d87-97a0-6d0ef0c1582c"));
		}

		#endregion

	}

	#endregion

}

